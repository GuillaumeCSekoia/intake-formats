name: office 365
pipeline:
  - name: json_event
    external:
      name: json.parse-json
  - name: parse_email
    external:
      name: grok.match
      properties:
        input_field: '{{json_event.message.UserId}}'
        output_field: message
        pattern: '%{EMAILADDRESS:email}'
  - name: parse_client_ip
    external:
      name: grok.match
      properties:
        input_field: '{{json_event.message.ClientIP}}'
        output_field: result
        pattern: '::ffff:%{IP:ip}|%{IP:ip}(:%{INT:port})?'
    filter: '{{json_event.message.ClientIP != null and json_event.message.ClientIP != "" and json_event.message.ClientIP != "<null>"}}'
  - name: set_common_fields
  - name: set_office365_fields
  - name: parse_network_traffic
    filter: '{{json_event.message.RecordType in [15, 25]}}'
  - name: parse_sharepoint_file_operation
    filter: '{{json_event.message.RecordType == 6}}'
  - name: parse_team
    filter: '{{json_event.message.RecordType == 25}}'
  - name: parse_microsoft_defender_email
    filter: '{{json_event.message.RecordType in [28, 41, 47]}}'

stages:
  set_common_fields:
    actions:
      - set:
          '@timestamp': '{{json_event.message.CreateTime}}'
          service.name: '{{json_event.message.Workload}}'
          action.id: '{{json_event.message.RecordType}}'
          action.name: '{{json_event.message.Operation}}'
          event.action: '{{json_event.message.Operation}}'
          user.name: '{{json_event.message.UserId}}'
          user.email: '{{parse_email.message.email}}'
          organization.id: '{{json_event.message.OrganizationId}}'
      - set:
          action.properties: >
            [
            {% for modifiedProperty in json_event.message.ModifiedProperties %}
            {% if modifiedProperty.Name != "Included Updated Properties"%}
            {% if modifiedProperty.Value != null and modifiedProperty.Value != "<Null>"%}
            {'name': '{{modifiedProperty.Name or Null}}', 'value': '{{modifiedProperty.Value}}'},
            {% else %}
            {'name': '{{modifiedProperty.Name or Null}}', 'value': None},
            {% endif %}
            {% endif %}
            {% endfor %}
            ]
        filter: '{{json_event.message.get("ModifiedProperties", []) != []}}'
      - set:
          source.ip: '{{parse_client_ip.result.ip}}'
          source.port: '{{parse_client_ip.result.port}}'
        filter: '{{json_event.message.get("ClientIP") != None and json_event.message.ClientIP != "" and json_event.message.ClientIP != "<null>"}}'
      - set:
          action.target: 'user'
        filter: '{{json_event.message.get("UserId") != None}}'
      - translate:
        dictionary:
          'Succeeded': 'success'
          'critical': 'failure'
        mapping:
          json_event.message.ResultStatus: action.outcome
        fallback: 'success'

  set_office365_fields:
    actions:
      - set:
          office365.record_type: '{{json_event.message.RecordType}}'
          office365.result_status: '{{json_event.message.ResultStatus}}'
          office365.user_type.code: '{{json_event.message.UserType}}'
          office365.scope.code: '{{json_event.message.Scope}}'
      - translate:
        dictionary:
          0: 'Regular'
          1: 'Reserved'
          2: 'Admin'
          3: 'DcAdmin'
          4: 'System'
          5: 'Application'
          6: 'ServicePrincipal'
          7: 'CustomPolicy'
          8: 'SystemPolicy'
        mapping:
          office365.user_type.code: office365.user_type.name
      - translate:
        dictionary:
          0: 'Online'
          1: 'Onprem'
        mapping:
          office365.scope.code: office365.scope.name
        filter: '{{json_event.message.Scope != null}}'
      - set:
          office365.context.aad_session_id: '{{json_event.message.AppAccessContext.AADSessionId}}'
          office365.context.api_id: '{{json_event.message.AppAccessContext.APIId}}'
          office365.context.client.id: '{{json_event.message.AppAccessContext.ClientAppId}}'
          office365.context.client.name: '{{json_event.message.AppAccessContext.ClientAppName}}'
          office365.context.correlation.id: '{{json_event.message.AppAccessContext.CorrelationId}}'
        filter: '{{json_event.message.get("AppAccessContext") != None}}'

  parse_network_traffic:
    actions:
      - set:
          action.target: 'network-traffic'
      - set:
          action.properties: >
            [
            {% for extendedProperty in json_event.message.ExtendedProperties %}
            {% if extendedProperty.Name != "targetIncludedUpdatedProperties"%}
            {% if extendedProperty.get("Value") != None and extendedProperty.Value != "<Null>"%}
            {'name': '{{extendedProperty.Name or Null}}', 'value': '{{extendedProperty.Value}}'},
            {% else %}
            {'name': '{{extendedProperty.Name or Null}}', 'value': None},
            {% endif %}
            {% endif %}
            {% endfor %}
            ]
        filter: '{{json_event.message.get("ExtendedProperties", []) != []}}'

  parse_sharepoint_file_operation:
    actions:
      - set:
          file.name: '{{json_event.message.SourceFileName}}'
          file.directory: '{{json_event.message.SourceRelativeUrl}}'
          user_agent.original: '{{json_event.message.UserAgent}}'
          action.outcome: 'success'
          url.full: '{{json_event.message.ObjectId}}'
          url.original: '{{json_event.message.ObjectId}}'
          action.properties: >
            [
              {
                {% if json_event.message.get("SourceFileName") != None %}"SourceFileName": "{{json_event.message.SourceFileName}}",{% endif %}
                {% if json_event.message.get("SourceRelativeUrl") != None %}"SourceRelativeUrl": "{{json_event.message.SourceRelativeUrl}}",{% endif %}
                {% if json_event.message.get("SiteUrl") != None %}"SiteUrl": "{{json_event.message.SiteUrl}}",{% endif %}
                {% if json_event.message.get("UserAgent") != None %}"UserAgent": "{{json_event.message.UserAgent}}",{% endif %}
              }
            ]

  parse_team:
    actions:
      - set:
          office365.teams.action: '{{json_event.message.Action}}'
          office365.teams.communication.type: '{{json_event.message.CommunicationType}}'
          office365.teams.channel.id: '{{json_event.message.ChannelGuid}}'
          office365.teams.channel.name: '{{json_event.message.ChannelName}}'
          office365.teams.channel.type: '{{json_event.message.ChannelType}}'
          office365.teams.message.id: '{{json_event.message.MessageId}}'
          office365.teams.message.version: '{{json_event.message.MessageVersion}}'
          office365.teams.message.size: '{{json_event.message.MessageSizeInBytes}}'
          office365.teams.message.urls: '{{json_event.message.MessageURLs}}'
          office365.teams.team.id: '{{json_event.message.TeamGuid}}'
          office365.teams.team.name: '{{json_event.message.TeamName}}'
          office365.teams.invitee: '{{json_event.message.Invitee}}'
      - set:
          office365.teams.team.members: >
            {%
              set mapping = {
                0: "Member",
                1: "Owner",
                2: "Guest"
              }
            %}[
              {%for member in json_event.message.Members %}
              {"id": "{{member.UPN}}", "role": "{{mapping.get(member.Role)}}"},
              {% endfor %}
            ]
        filter: '{{json_event.message.get("Members", []) != []}}'
      - set:
          url.original: '{{json_event.message.MessageURLs[0]}}'
        filter: '{{json_event.message.get("MessageURLs", []) | length >= 1}}'

  parse_microsoft_defender_email:
    actions:
      - set:
          email.attachments: >
            [
              {% for attachment in json_event.message.AttachmentData %}
              {
                "file": {
                  {% if attachment.FileName != null %}"name": "{{attachment.FileName}}",{% endif %}
                  {% if attachment.FileType != null %}"mime_type": "{{attachment.FileType}}",{% endif %}
                  {% if attachment.SHA256 != null %}"hash": {"sha256": "{{attachment.FileType}}"},{% endif %}
                }
              },
              {% endfor %}
            ]
          email.message_id: '{{json_event.message.InternetMessageId}}'
          email.local_id: '{{json_event.message.NetworkMessageId}}'
          email.reply_to.address: '["{{json_event.message.P1Sender}}"]'
          email.from.address: '["{{json_event.message.P2Sender}}"]'
          email.to.address: '{{json_event.message.Recipients|string}}'
          email.subject: '{{json_event.message.Subject}}'
          email.delivery_timestamp: '{{json_event.message.MessageTime}}'
          source.ip: '{{json_event.message.SenderIp}}'
          event.url: '{{json_event.message.EventDeepLink}}'
      - translate:
        dictionary:
          1: 'HSPM'
          2: 'SPM'
          3: 'Bulk'
          4: 'PHSH'
          5: 'DIMP'
          6: 'UIMP'
          7: 'SPOOF'
          8: 'GIMP'
          9: 'AMP'
          10: 'SAP'
          11: 'ETR'
          12: 'ZAPM'
          13: 'ZAPP'
          14: 'ZAPS'
          15: 'High confidence phish email (HPHISH)'
          17: 'Outbound spam policy (OSPM)'
        mapping:
          json_event.message.Policy: rule.name
      - translate:
        dictionary:
          1: 'Anti-spam'
          2: 'Anti-spam'
          3: 'Anti-spam'
          4: 'Anti-spam'
          5: 'Anti-phish'
          6: 'Anti-phish'
          7: 'Anti-phish'
          8: 'Anti-phish'
          9: 'Anti-malware'
          10: 'Safe attachment'
          11: 'Exchange transport rule'
          12: 'Anti-malware'
          13: 'Anti-phish'
          14: 'Anti-phish'
          15: 'Anti-spam'
          17: 'Anti-spam'
        mapping:
          json_event.message.Policy: rule.category
      - translate:
        dictionary:
          0: 'MoveToJMF'
          1: 'AddXHeader'
          2: 'ModifySubject'
          3: 'Redirect'
          4: 'Delete'
          5: 'Quarantine'
          6: 'NoAction'
          7: 'BccMessage'
          8: 'ReplaceAttachment'
        mapping:
          json_event.message.PolicyAction: event.action
          json_event.message.PolicyAction: action.name
      - set:
          office365.defender.email.attachments: >
            {%
              set mapping = {
                0: "good",
                1: "bad",
                -1: "error",
                -2: "timeout",
                -3: "pending"
              }
            %}[
              {% for attachment in json_event.message.AttachmentData %}
              {
                {% if attachment.FileName != null %}"name": "{{attachment.FileName}}",{% endif %}
                {% if attachment.FileVerdict != null %}"verdict": {"code": "{{attachment.FileVerdict}}", "name": "{{mapping.get(attachment.FileVerdict)}}"},{% endif %}
                {% if attachment.MalwareFamily != null %}"name": "{{attachment.MalwareFamily}}",{% endif %}
              },
              {% endfor %}
            ]
          office365.defender.email.verdict.reason: '{{json_event.message.Verdict}}'
          office365.defender.email.verdict.confidence: '{{json_event.message.PhishConfidenceLevel}}'
          office365.defender.email.delivery.action: '{{json_event.message.DeliveryAction}}'
          office365.defender.email.delivery.original_location: '{{json_event.message.OriginalDeliveryLocation}}'
          office365.defender.email.delivery.latest_location: '{{json_event.message.LatestDeliveryLocation}}'
          office365.defender.detection.type: '{{json_event.message.DetectionType}}'
          office365.defender.detection.method: '{{json_event.message.DetectionMethod}}'
          office365.defender.detection.technology: '{{json_event.message.ThreatsAndDetectionTech}}'
          office365.defender.connectors: '{{json_event.message.Connectors}}'
          office365.defender.additional_actions: '{{json_event.message.AdditionalActionsAndResults|string}}'
          office365.defender.auth_details: '{{json_event.message.AuthDetails|string}}'
          office365.defender.system_overrides: '{{json_event.message.SystemOverrides|string}}'
